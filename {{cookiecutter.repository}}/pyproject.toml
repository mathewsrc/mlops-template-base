[tool.poetry]
name = "{{cookiecutter.repository}}"
version = "{{cookiecutter.version}}"
description = "{{cookiecutter.description}}"
repository = "https://github.com/{{cookiecutter.user}}/{{cookiecutter.repository}}"
documentation = "https://{{cookiecutter.user}}.github.io/{{cookiecutter.repository}}/"
authors = ["{{cookiecutter.user}}"]
readme = "README.md"
license = "{{cookiecutter.license}}"
packages = [{ include = "{{cookiecutter.package}}", from = "src" }]

[tool.poetry.scripts]
{{cookiecutter.repository}} = "{{cookiecutter.package}}.scripts:main"

[tool.poetry.dependencies]
python = "^{{cookiecutter.python_version}}"
ruff = "^0.5.6"
pre-commit = "^3.8.0"
pytest = "^8.3.2"
pytest-cov = "^5.0.0"
pydantic = "^2.8.2"
invoke = "^2.2.0"
bandit = "^1.7.9"
coverage = "^7.5.4"
mypy = "^1.10.1"
pytest-xdist = "^3.6.1"
pdoc = ^14.5.1"
ipykernel = "^6.29.4"
nbformat = "^5.10.4"

# CONFIGURATIONS

[tool.bandit]
targets = ["src"]

[tool.coverage.run]
branch = true
source = ["src"]
omit = ["__main__.py"]

[tool.mypy]
pretty = true
strict = true
python_version = "{{cookiecutter.python_version}}"
check_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = "--verbosity=2"
pythonpath = ["src"]

[tool.ruff]
fix = true
indent-width = 4
line-length = 100
target-version = "py{{cookiecutter.python_version.replace('.', '')}}"

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["D100", "D103"]

[tool.ruff]
line-length = 100

[tool.ruff.lint]
# 2. Avoid enforcing line-length violations (`E501`)
#ignore = ["E501"]
extend-safe-fixes = ["F541"]

[tool.ruff.format]
quote-style = "double"
indent-style = "tab"
docstring-code-format = true
line-ending = "auto"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
